package main

import (
	"bytes"
	"fmt"
	"io"
	"net/http"
	"net/http/httptest"
	"os"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestHelloWorld(t *testing.T) {

	//  get runner hostname
	hostname, _ := os.Hostname()
	expectedMessage := fmt.Sprintf("Hello World from %s", hostname)

	// Initialize a new httptest.ResponseRecorder.
	rr := httptest.NewRecorder()

	// Initialize a new dummy http.Request.
	r, err := http.NewRequest(http.MethodGet, "/", nil)
	if err != nil {
		t.Fatal(err)
	}

	// Call the helloWorld handler function, passing in the
	// httptest.ResponseRecorder and http.Request.
	helloWorld(rr, r)

	// Call the Result() method on the http.ResponseRecorder to get the
	// http.Response generated by the helloWorld handler.
	rs := rr.Result()

	// Check that the status code written by the helloWorld handler was 200.
	assert.Equal(t, rs.StatusCode, http.StatusOK)

	// And we can check that the response body written by the helloWorld handler
	// equals expectedMessage.
	defer rs.Body.Close()
	body, err := io.ReadAll(rs.Body)
	if err != nil {
		t.Fatal(err)
	}
	bytes.TrimSpace(body)

	assert.Equal(t, string(body), expectedMessage)
}
